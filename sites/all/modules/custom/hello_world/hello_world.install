<?php
/**
 * @file
 * Creates content and sets Drupal in required state for custom code to work.
 */

define('HELLO_WORLD_DEFAULT_THEME', 'bartik');
define('HELLO_WORLD_VOCABULARY', 'sections');
define('HELLO_WORLD_NODE_BUNDLE', 'hello_world_article');

/**
 * Implements hook_install().
 */
function hello_world_install() {
  // Create the section terms.
  $sections_path = drupal_get_path('module', 'hello_world') . '/import/terms_sections.csv';
  _create_vocab_terms(_import_from_csv($sections_path));

  // Create the hello world article nodes.
  $articles_path = drupal_get_path('module', 'hello_world') . '/import/node_hello_world_article.csv';
  _create_hello_world_article_nodes_with_sections(_import_from_csv($articles_path));

  _set_theme(HELLO_WORLD_DEFAULT_THEME);
}

/**
 * Load the items from csv that are to be imported as nodes.
 *
 * @param string $path
 *   The path of the csv file to be loaded.
 *
 * @return array
 *   An array containing an associated array for each line item in the csv file
 * where the row headers are the array keys.
 */
function _import_from_csv($path, $delimiter = ',') {
  if (!file_exists($path) || !is_readable($path)) {
    return FALSE;
  }

  $header = NULL;
  $data = [];
  if (($handle = fopen($path, 'r')) !== FALSE) {
    while (($row = fgetcsv($handle, 1000, $delimiter)) !== FALSE) {
      if (!$header) {
        $header = $row;
      }
      else {
        $data[] = array_combine($header, $row);
      }
    }
    fclose($handle);
  }
  return $data;
}

/**
 * Creates taxonomy terms.
 *
 * @param array $terms
 *   The taxonomy terms to be created.
 */
function _create_vocab_terms($terms) {
  // Load the vocab that the terms are going to add to.
  $vocab = taxonomy_vocabulary_machine_name_load(HELLO_WORLD_VOCABULARY);

  // The cache may need to be cleared here to help features.
  if (empty($vocab)) {
    drupal_flush_all_caches();
    $vocab = taxonomy_vocabulary_machine_name_load(HELLO_WORLD_VOCABULARY);
  }

  // Load the t function since it's not available during the install process.
  $t = get_t();

  // Create a save a taxonomy term for each term provided.
  foreach ($terms as $term) {
    $term = (object) $term;
    $new_term = new stdClass();
    $new_term->vid = $vocab->vid;
    $new_term->name = $t($term->term);
    $new_term->weight = 1;
    taxonomy_term_save($new_term);
  }
}

/**
 * Create hello world article nodes with sections.
 *
 * @param array $articles
 *   An array of associated arrays containing the following keys:
 *    - title
 *    - section
 */
function _create_hello_world_article_nodes_with_sections($articles) {
  // The cache may need to be cleared here to help features.
  if (!node_type_load(HELLO_WORLD_NODE_BUNDLE)) {
    drupal_flush_all_caches();
  }

  // Load the t function since it's not available during the install process.
  $t = get_t();

  foreach ($articles as $article) {
    $article = (object) $article;
    $section = taxonomy_get_term_by_name($article->section, HELLO_WORLD_VOCABULARY);
    $node = new stdClass();
    $node->type = HELLO_WORLD_NODE_BUNDLE;
    $node->is_new = TRUE;
    node_object_prepare($node);
    $node->title = $t($article->title);
    $node->language = LANGUAGE_NONE;
    $node->field_sections[$node->language][]['tid'] = end($section)->tid;
    $node = node_submit($node);
    node_save($node);
  }
}

/**
 * Enables theme.
 *
 * @param string $theme
 *   Theme machine name.
 */
function _set_theme($theme) {
  // Only enable the theme if Drupal and isn't already enabled.
  $themes = list_themes(TRUE);
  if (module_exists($theme) && array_key_exists($theme, $themes)) {
    if ($themes[$theme]->status != 1) {
      theme_enable(array($theme));
    }
  }
}
